apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'signing'

String nome = 'Jose Flavio Livre'
String sigla = 'JFL'

group = 'com.joseflavio'
archivesBaseName = 'jfl'
version = '4.0'

sourceCompatibility = 1.6
compileJava.options.encoding = 'ISO-8859-1'

sourceSets {
    main.java.srcDirs = ['fonte']
    main.resources.srcDirs = ['recurso']
}

jar {
    
    from sourceSets.main.output

    manifest {
        attributes 'Implementation-Title': nome + ' - JavaSE',
                   'Implementation-Version': version,
                   'Main-Class': ''
    }

    exclude 'com/joseflavio/jpa/**'
    exclude 'com/joseflavio/tqc/servlet/**'
    exclude '*.dll'

}

task jarJavaSE(type: Jar) {

    classifier = 'javase'
    from sourceSets.main.output

    manifest {
        attributes 'Implementation-Title': nome + ' - JavaSE',
                   'Implementation-Version': version,
                   'Main-Class': ''
    }

    exclude 'com/joseflavio/jpa/**'
    exclude 'com/joseflavio/tqc/servlet/**'
    exclude '*.dll'

}

task jarJavaEE(type: Jar) {

    classifier = 'javaee'
    from sourceSets.main.output

    manifest {
        attributes 'Implementation-Title': nome + ' - JavaEE',
                   'Implementation-Version': version,
                   'Main-Class': ''
    }

    exclude '*.dll'

}

task jarAndroid(type: Jar) {
    
    classifier = 'android'
    from sourceSets.main.output
    
    manifest {
        attributes 'Implementation-Title': nome + ' - Android',
                   'Implementation-Version': version,
                   'Main-Class': ''
    }

    exclude 'com/joseflavio/dominio/activedirectory/**'
    exclude 'com/joseflavio/jpa/**'
    exclude 'com/joseflavio/tqc/**'
    exclude '*.dll'

}

task jarLinux(type: Jar) {
    
    classifier = 'linux'
    from sourceSets.main.output
    
    manifest {
        attributes 'Implementation-Title': nome + ' - Linux',
                   'Implementation-Version': version,
                   'Main-Class': ''
    }

    exclude '*.dll'

}

task jarWindows(type: Jar) {
    
    classifier = 'windows'
    from sourceSets.main.output
    
    manifest {
        attributes 'Implementation-Title': nome + ' - Windows',
                   'Implementation-Version': version,
                   'Main-Class': ''
    }

}

task jarFonte(type: Jar) {
    
    classifier = 'sources'
    from sourceSets.main.allSource

    manifest {
        attributes 'Implementation-Title': nome,
                   'Implementation-Version': version,
                   'Main-Class': ''
    }

    exclude '*.dll'

}

task jarDoc(type: Jar) {

    classifier = 'javadoc'
    from javadoc

    javadoc.options.encoding = 'ISO-8859-1'
    javadoc.failOnError = false
    javadoc.title = nome + ' - ' + sigla + ' ' + version
    javadoc.options.links = [
        'http://docs.oracle.com/javase/7/docs/api/',
        'http://docs.oracle.com/javaee/7/api/'
    ]
    
}

task JFL(dependsOn:[
    jar, jarJavaSE, jarJavaEE, jarAndroid, jarLinux, jarWindows, jarFonte, jarDoc
])

artifacts {
    archives jar, jarJavaSE, jarJavaEE, jarAndroid, jarLinux, jarWindows, jarFonte, jarDoc
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

repositories {
    mavenCentral()
    flatDir {
       dirs 'biblioteca'
   }
}

dependencies {
    compile 'junit:junit:4.11'
    compile 'log4j:log4j:1.2.17'
    compile 'javax.xml.bind:jaxb-api:2.2.11'
    compile 'javax.xml.stream:stax-api:1.0-2'
    compile 'com.sun.xml.bind:jaxb-xjc:2.2.7'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-codec:commons-codec:1.9'
    compile 'commons-net:commons-net:3.3'
    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'org.apache.commons:commons-email:1.3.2'
    compile 'javax:javaee-api:7.0'
}

eclipse {
    project {
        name = archivesBaseName
    }
    classpath {
        defaultOutputDir = file('binario')
        file {
            beforeMerged {
                classpath -> classpath.entries.removeAll { entry -> entry.kind == 'output' }
            }
        }
    }
}

uploadArchives {
  repositories {
    mavenDeployer {

      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication( userName: 'xxxxxx', password: 'xxxxxx' )
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication( userName: 'xxxxxx', password: 'xxxxxx' )
      }

      pom.project {

        name 'José Flávio Livre'
        packaging 'jar'
        description 'Biblioteca Java para desenvolvimento de aplicações gerais.'
        url 'http://www.joseflavio.com/livre'

        scm {
          connection 'scm:git:ssh:git@github.com/joseflaviojr/livre.git'
          developerConnection 'scm:git:ssh:git@github.com/joseflaviojr/livre.git'
          url 'https://github.com/joseflaviojr/livre.git'
        }

        licenses {
          license {
            name 'GNU Lesser General Public License, Version 3'
            url 'http://www.gnu.org/licenses/lgpl.txt'
          }
        }

        developers {
          developer {
            id 'joseflaviojr'
            name 'José Flávio de Souza Dias Júnior'
            email 'contato@joseflavio.com'
          }
        }

      }

    }
  }
}
